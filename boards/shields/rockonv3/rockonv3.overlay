#include <dt-bindings/zmk/matrix_transform.h>


// Tell VIK that there is 1 other device on the SPI bus.
// You will need to increase this number if you add another SPI device.
#define VIK_SPI_REG_START 1
// Pulled out to an external variable so VIK can find the SPI bus.
#define VIK_SPI_CS_PREFIX <&gpio0 17 GPIO_ACTIVE_LOW>

&spi1 {
    status = "okay";
    cs-gpios = VIK_SPI_CS_PREFIX;

    shifter: 595@0 {
        compatible = "zmk,gpio-595";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <200000>;
        reg = <0>;
        ngpios = <16>;
        #gpio-cells = <2>;
    };
};


/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix-transform = &default_transform;
	};

	kscan0: kscan_0 {
		compatible = "zmk,kscan-gpio-matrix";
		diode-direction = "col2row";
		
		col-gpios
            = <&shifter 7 GPIO_ACTIVE_HIGH> // COL0
            , <&shifter 6 GPIO_ACTIVE_HIGH> // COL1
            , <&shifter 5 GPIO_ACTIVE_HIGH> // COL2
            , <&shifter 4 GPIO_ACTIVE_HIGH> // COL3
            , <&shifter 3 GPIO_ACTIVE_HIGH> // COL4
            , <&shifter 2 GPIO_ACTIVE_HIGH> // COL5
            ;
		row-gpios =
			<&gpio0 01 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			<&gpio0 02 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			<&gpio0 07 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			<&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			<&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
	};

   default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <5>;
        columns = <14>;
        map = <
                    RC(0,1) RC(0,2) RC(0,3) 
            RC(1,0) RC(1,1) RC(1,2) RC(1,3)
            RC(2,0) RC(2,1) RC(2,2)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3)
            RC(4,0)         RC(4,1)
        >;
    };
};



